{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/ArticleListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","articles","name","title","content","ArticlesList","map","article","key","className","to","substring","ArticleListPage","articleContent","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","console","log","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","Navbar","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dbe98962.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst HomePage = () => (\r\n    <>\r\n        <h1>Welcome to my blog</h1>\r\n        <p>\r\n        Placerat placerat justo inceptos faucibus enim ante eu quisque elementum per aptent. Erat phasellus porttitor cum montes suscipit nascetur cras praesent eleifend tempor. Facilisis parturient turpis rutrum etiam. Dui dictumst enim torquent porta nisl arcu fames sodales massa ullamcorper. Sollicitudin convallis proin et lacinia elit gravida. Semper sociis convallis, facilisi tellus class at elit. Sociis curae;, netus.\r\n        </p>\r\n        <p>\r\n        Integer convallis ultricies porttitor, nullam mollis. Duis aptent curae; velit. Neque magnis sit tincidunt ullamcorper felis bibendum. Massa dolor condimentum interdum litora suscipit himenaeos molestie id cursus. Turpis porttitor, dolor quis. Tortor tristique volutpat diam consectetur in scelerisque aptent lectus bibendum lacus sit. Enim dignissim nullam maecenas, est lobortis ridiculus cras vivamus. Dolor senectus cursus ante elementum magnis euismod arcu. Vel arcu nullam nisl potenti penatibus et duis vulputate suspendisse ligula hendrerit. Consectetur rhoncus fermentum, per netus euismod. Sapien fringilla nullam laoreet aliquet.\r\n        </p>\r\n        <p>\r\n        Sed ultrices leo egestas aptent elit elementum nam urna turpis! Tristique eros non dignissim consequat montes lobortis ad himenaeos scelerisque viverra etiam. Tincidunt libero leo dictum semper sapien praesent porta porta! Cursus duis habitant imperdiet vivamus cubilia vel sem nunc tristique mi lacus. Velit faucibus ac accumsan ac malesuada scelerisque tincidunt. Taciti aliquet pellentesque augue nostra malesuada orci lorem curae;. Torquent dolor dictum metus. Ut tellus pretium urna nec eu luctus viverra rhoncus duis fames? Est tincidunt ultricies.\r\n        </p>\r\n        <p>\r\n        Urna pharetra suspendisse convallis leo pellentesque volutpat aliquam iaculis dis. Fringilla eros metus ullamcorper commodo erat inceptos vel. Sem primis aliquet lacus orci metus curabitur sollicitudin nibh hendrerit ligula pharetra. Lacus interdum sapien neque, egestas eu lobortis malesuada cras cursus. Arcu ad enim eros rhoncus, ornare scelerisque eget amet. Duis risus condimentum nam arcu parturient quisque!\r\n        </p>\r\n        <p>\r\n        Vel dignissim parturient blandit tempor risus fames ligula per. Senectus habitasse inceptos imperdiet condimentum amet nulla. Lorem est nulla sollicitudin. Torquent nulla suspendisse pulvinar eu quisque tempus parturient, eleifend luctus sodales habitasse. Nec odio velit luctus eleifend penatibus sed lectus faucibus laoreet! Cras tempor molestie facilisi. Nam condimentum, scelerisque hendrerit? Vivamus a, nibh maecenas facilisis. Dui varius, parturient orci tempor molestie inceptos? Mauris.\r\n        </p>\r\n    </>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nconst AboutPage = () => (\r\n    <>\r\n        <h1>About Me</h1>\r\n        <p>\r\n        Placerat placerat justo inceptos faucibus enim ante eu quisque elementum per aptent. Erat phasellus porttitor cum montes suscipit nascetur cras praesent eleifend tempor. Facilisis parturient turpis rutrum etiam. Dui dictumst enim torquent porta nisl arcu fames sodales massa ullamcorper. Sollicitudin convallis proin et lacinia elit gravida. Semper sociis convallis, facilisi tellus class at elit. Sociis curae;, netus.\r\n        </p>\r\n        <p>\r\n        Integer convallis ultricies porttitor, nullam mollis. Duis aptent curae; velit. Neque magnis sit tincidunt ullamcorper felis bibendum. Massa dolor condimentum interdum litora suscipit himenaeos molestie id cursus. Turpis porttitor, dolor quis. Tortor tristique volutpat diam consectetur in scelerisque aptent lectus bibendum lacus sit. Enim dignissim nullam maecenas, est lobortis ridiculus cras vivamus. Dolor senectus cursus ante elementum magnis euismod arcu. Vel arcu nullam nisl potenti penatibus et duis vulputate suspendisse ligula hendrerit. Consectetur rhoncus fermentum, per netus euismod. Sapien fringilla nullam laoreet aliquet.\r\n        </p>\r\n        <p>\r\n        Sed ultrices leo egestas aptent elit elementum nam urna turpis! Tristique eros non dignissim consequat montes lobortis ad himenaeos scelerisque viverra etiam. Tincidunt libero leo dictum semper sapien praesent porta porta! Cursus duis habitant imperdiet vivamus cubilia vel sem nunc tristique mi lacus. Velit faucibus ac accumsan ac malesuada scelerisque tincidunt. Taciti aliquet pellentesque augue nostra malesuada orci lorem curae;. Torquent dolor dictum metus. Ut tellus pretium urna nec eu luctus viverra rhoncus duis fames? Est tincidunt ultricies.\r\n        </p>\r\n        <p>\r\n        Urna pharetra suspendisse convallis leo pellentesque volutpat aliquam iaculis dis. Fringilla eros metus ullamcorper commodo erat inceptos vel. Sem primis aliquet lacus orci metus curabitur sollicitudin nibh hendrerit ligula pharetra. Lacus interdum sapien neque, egestas eu lobortis malesuada cras cursus. Arcu ad enim eros rhoncus, ornare scelerisque eget amet. Duis risus condimentum nam arcu parturient quisque!\r\n        </p>\r\n        <p>\r\n        Vel dignissim parturient blandit tempor risus fames ligula per. Senectus habitasse inceptos imperdiet condimentum amet nulla. Lorem est nulla sollicitudin. Torquent nulla suspendisse pulvinar eu quisque tempus parturient, eleifend luctus sodales habitasse. Nec odio velit luctus eleifend penatibus sed lectus faucibus laoreet! Cras tempor molestie facilisi. Nam condimentum, scelerisque hendrerit? Vivamus a, nibh maecenas facilisis. Dui varius, parturient orci tempor molestie inceptos? Mauris.\r\n        </p>\r\n    </>\r\n);\r\n\r\nexport default AboutPage;\r\n","const articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },    {\n        name: 'learn-node',\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },     {\n        name: 'my-thoughts-on-resumes',\n        title: 'My Thoughts on Resumes',\n        content: [\n            `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ArticlesList = ({ articles }) => (\r\n    <>\r\n        {articles.map((article, key)  => (\r\n            <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\r\n                <h3>{article.title}</h3>\r\n                <p>{article.content[0].substring(0, 150)}. . .</p>\r\n            </Link>\r\n        ))}\r\n    </>\r\n);\r\nexport default ArticlesList;","import React from 'react';\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\n\r\nconst ArticleListPage = () => (\r\n    <>\r\n        <h1>Articles</h1>\r\n        <ArticlesList articles={articleContent}/>\r\n    </>\r\n);\r\n\r\nexport default ArticleListPage;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found.</h1>\r\n)\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\n\r\nconst CommentsList = ({ comments }) => (\r\n    <>\r\n\r\n    <h3>Comments:</h3>\r\n    {comments.map((comment, key) => (\r\n        <div className=\"comment\" key={key}>\r\n            <h4>{comment.username}</h4>\r\n            <p>{comment.text}</p>   \r\n        </div>\r\n    ))}\r\n    </>\r\n);\r\n\r\nexport default CommentsList;\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n// upvotes section\r\n// bring in article's name to upvote the correct article\r\n// the number of upvotes\r\n// and setArticleInfo to refresh the article info on the page\r\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n            method: 'post',\r\n        });\r\n        const body = await result.json();\r\n        console.log(body);\r\n        setArticleInfo(body);\r\n    }\r\n\r\n    return (\r\n        <div id=\"upvotes-section\">\r\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\r\n            <p>This post has been upvoted {upvotes} times</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UpvotesSection;","import React, { useState } from 'react';\r\n\r\n\r\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\r\n\r\n    // States set to default values\r\n    const [username, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    \r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`,{\r\n            method: 'post',\r\n            body: JSON.stringify({username, text: commentText}),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }    \r\n        });\r\n\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n\r\n        setUsername('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n        <h3>Add a Comment</h3>\r\n        <label>\r\n            Name:\r\n            <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)}/>\r\n        </label>\r\n        <label>\r\n            Comment:\r\n            <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\r\n        </label>\r\n            <button onClick={() => addComment()}>Add Comment</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddCommentForm;","import React, { useState, useEffect } from 'react';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport articleContent from './article-content';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\n\r\n// match is a prop sent by Router\r\n// match contains a property called params \r\n// these params will contain the name parameter we set  \r\nconst ArticlePage = ({ match }) => {\r\n    // get name param from url\r\n    const name = match.params.name;\r\n    // get article from list of articles\r\n    // by matching name from url to the article name in array\r\n    const article = articleContent.find(article => article.name === name)\r\n\r\n    // article info - the article requested from server\r\n    // serArticleInfo - function to change value of articleInfo\r\n    // useState({}) - default values of articleInfo before server request\r\n    const [articleInfo, setArticleInfo] = useState({upvotes: 0, comments: []});\r\n\r\n    // useEffect hook is used to perform side effects \r\n    // This will be executed when the page is loaded\r\n    // Before we had to use componentDidMount\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // get article from server\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            // get the body of the response\r\n            const body = await result.json();\r\n            // set state to information from server\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n\r\n        // The second parameter is an array of things that we want to be watched, when one of those things changes/updates, then use effect will be called again\r\n    }, [name]);\r\n\r\n    // if article does not exist\r\n    if(!article) return <NotFoundPage />\r\n\r\n    // Filter articles to exclude the current article\r\n    const otherArticles = articleContent.filter(article => article.name !== name);\r\n\r\n    return (\r\n        <>\r\n            <h1>{article.title}</h1>\r\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n            {article.content.map((paragraph, key) => (\r\n                <p key={key}>{paragraph}</p>\r\n            ))}\r\n\r\n            <CommentsList comments={articleInfo.comments} />\r\n\r\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n\r\n            <h3>Other Articles:</h3>\r\n            <ArticlesList articles={otherArticles} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArticlePage;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => (\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/about\">About</Link>\r\n                <Link to=\"/article-list\">Articles</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage'\nimport ArticleListPage from './pages/ArticleListPage'\nimport ArticlePage from './pages/ArticlePage'\nimport NotFoundPage from './pages/NotFoundPage';\nimport Navbar from './Navbar';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div id=\"page-body\">\n\n        {/* Switch makes sure that only one of the routes is rendered at a time*/}\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact/>\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/article-list\" component={ArticleListPage} />\n            <Route path=\"/article/:name\" component={ArticlePage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}